{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WITLAB\\\\nodejs\\\\makeup\\\\makeup\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\WITLAB\\\\nodejs\\\\makeup\\\\makeup\\\\src\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport Capstone from './Capstone';\nimport Loading from './Loading';\n// import Chart from \"./Chart\"\n\n// let cri_data = [\n//     { name: 'CRI', value: 0},\n//     { name: 'Zero', value: 100},\n// ];\n\n// let cct_data = 0;\n// let illum_data = 0;\n\n// let control_data =[0,3500,600];\n\nvar url = 'http://210.102.142.20:9999/';\nvar socket = io.connect(url);\nconsole.log(\"서버에 안드로이드임을 알림\");\nsocket.emit('device', \"android\"); //자바 서버에 안드로이드임을 알리기 위해 백엔드서버에 전송\n\nfunction Main() {\n  // const [data, setCRI] = useState(cri_data);\n  // const [cct , setCCT] = useState(cct_data);\n  // const [illum , setILLUM] = useState(illum_data);\n  // const[value, setValue] = useState(300);\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    loading = _useState2[0],\n    setLoading = _useState2[1];\n  socket.on('registration', function (data) {\n    console.log(data);\n    if (data === \"true\") {\n      console.log(\"Device Registration Complete\");\n      // let blind = document.getElementsByClassName(\"blind\")[0];\n      // let background  = document.getElementsByClassName(\"background\")[0];\n\n      // blind.style.display = \"none\";\n      // background.style.display = \"inline\";\n      setLoading(false);\n    }\n  });\n\n  // useEffect(() =>{\n  //     //조명 토글 off로 초기 설정\n  //     let obj_off = document.getElementById(\"off\"); \n  //     obj_off.checked = true;\n\n  //     socket.on('registration', (data) =>{\n  //         console.log(data);\n  //         if(data ===\"true\"){\n  //             console.log(\"Device Registration Complete\");\n  //             let blind = document.getElementsByClassName(\"blind\")[0];\n  //             let background  = document.getElementsByClassName(\"background\")[0];\n\n  //             blind.style.display = \"none\";\n  //             background.style.display = \"inline\";\n  //         }\n\n  //     });\n\n  //     socket.on('sensing', (data) => {\n  //         // \"cct:0000/illu:000/cri:000\"\n  //         console.log(\"data: \"+data.toString());\n  //         // console.log(\"ddd: \"+ data.sensing);\n\n  //         let str = data.toString();\n\n  //         let temp = str.split(\"/\");\n  //         console.log(\"temp: \"+temp[0]);\n  //         let value =[];\n  //         for(let i=0;i<temp.length;i++){\n\n  //             value[i] = temp[i].split(\":\")[1];\n  //             console.log(value[i]);\n  //         }\n\n  //         setCCT(value[0]);\n  //         setILLUM(value[1]);\n\n  //         cri_data[0].value = value[2];\n  //         cri_data[1].value = 100 - value[2];\n  //         setCRI(cri_data);\n\n  //     });\n\n  // },[])\n\n  // const bntClick =() =>{\n  //     // let blank = document.getElementsByClassName(\"blank\")[0];\n  //     // blank.remove();\n  //     let blind = document.getElementsByClassName(\"blind\")[0];\n  //     let background  = document.getElementsByClassName(\"background\")[0];\n\n  //     blind.style.display = \"none\";\n  //     background.style.display = \"inline\";\n  // }\n\n  // const Refresh =() => {\n  //     window.location.replace(\"/\");\n  // }\n\n  // const setCheck =(e) =>{ //led on off Evnet\n  //     if(e.target.id === \"on\"){\n  //         if(e.target.checked){  //on 일때\n  //             control_data[0] = 1;\n  //             sent_control_data();\n  //         }\n  //     }\n  //     else{\n  //         if(e.target.checked){  //off 일때\n  //             control_data[0] = 0;\n  //             sent_control_data();\n  //         }\n  //     }\n  // }\n\n  // const MouseDown =(obj) =>{\n  //     let range = obj.target.value;\n  //     // console.log(\"mouseDown: \" + range);\n  //     window.addEventListener('mouseup', onMouseUp);\n\n  // }\n\n  // const onMouseUp =(e) =>{\n\n  //     if(e.target.id === \"range_cct\" || e.target.id ===\"range_illum\"){\n  //         // console.log(\"up: \"+ e.target.value)\n  //         let value = e.target.value;\n\n  //         if(e.target.id ===\"range_illum\"){\n  //             if(value<700){\n  //                 e.target.value = 600;\n  //             }\n  //             else if(value>=700 && value<900){\n  //                 e.target.value = 800;\n  //             }\n  //             else if(value<=1000){\n  //                 e.target.value = 1000;\n  //             }\n\n  //             control_data[2] = e.target.value;\n  //             setValue(e.target.value);\n\n  //         }\n  //         else if(e.target.id ===\"range_cct\"){\n  //             if(value<4000){\n  //                 e.target.value = 3500;\n  //             }\n  //             else if(value>=4000 && value<5000){\n  //                 e.target.value = 4500;\n  //             }\n  //             else if(value<=5500){\n  //                 e.target.value = 5500;\n  //             }\n\n  //             control_data[1] = e.target.value;\n\n  //         }\n\n  //         sent_control_data();\n  //     }\n\n  // }\n\n  // const sent_control_data =() =>{\n  //     // \"onoff:on/cct:0000/illu:000\"\n  //     let led_state;\n  //     if(control_data[0]){led_state = \"on\";}\n  //     else{led_state=\"off\";}\n  //     let str = \"onoff:\"+ led_state+\"/cct:\"+control_data[1]+\"/illu:\"+control_data[2];\n\n  //     socket.emit('message', str);//서버에 안드로이드임을 알림\n\n  //     // console.log(str);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(Capstone, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 36\n    }\n  }));\n}\nexport default Main;","map":{"version":3,"names":["React","useState","useEffect","io","Capstone","Loading","url","socket","connect","console","log","emit","Main","loading","setLoading","on","data"],"sources":["C:/Users/WITLAB/nodejs/makeup/makeup/src/Main.js"],"sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport io from 'socket.io-client';\r\nimport Capstone from './Capstone';\r\nimport Loading from './Loading';\r\n// import Chart from \"./Chart\"\r\n\r\n// let cri_data = [\r\n//     { name: 'CRI', value: 0},\r\n//     { name: 'Zero', value: 100},\r\n// ];\r\n\r\n// let cct_data = 0;\r\n// let illum_data = 0;\r\n\r\n// let control_data =[0,3500,600];\r\n\r\n\r\nconst url = 'http://210.102.142.20:9999/';\r\nconst socket =  io.connect(url);\r\n\r\nconsole.log(\"서버에 안드로이드임을 알림\");\r\nsocket.emit('device', \"android\");//자바 서버에 안드로이드임을 알리기 위해 백엔드서버에 전송\r\n\r\n\r\nfunction Main(){\r\n\r\n    // const [data, setCRI] = useState(cri_data);\r\n    // const [cct , setCCT] = useState(cct_data);\r\n    // const [illum , setILLUM] = useState(illum_data);\r\n\r\n    // const[value, setValue] = useState(300);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    socket.on('registration', (data) =>{\r\n        console.log(data);\r\n        if(data ===\"true\"){\r\n            console.log(\"Device Registration Complete\");\r\n            // let blind = document.getElementsByClassName(\"blind\")[0];\r\n            // let background  = document.getElementsByClassName(\"background\")[0];\r\n    \r\n            // blind.style.display = \"none\";\r\n            // background.style.display = \"inline\";\r\n            setLoading(false);\r\n        }\r\n        \r\n    });\r\n\r\n    // useEffect(() =>{\r\n    //     //조명 토글 off로 초기 설정\r\n    //     let obj_off = document.getElementById(\"off\"); \r\n    //     obj_off.checked = true;\r\n\r\n    //     socket.on('registration', (data) =>{\r\n    //         console.log(data);\r\n    //         if(data ===\"true\"){\r\n    //             console.log(\"Device Registration Complete\");\r\n    //             let blind = document.getElementsByClassName(\"blind\")[0];\r\n    //             let background  = document.getElementsByClassName(\"background\")[0];\r\n        \r\n    //             blind.style.display = \"none\";\r\n    //             background.style.display = \"inline\";\r\n    //         }\r\n            \r\n    //     });\r\n\r\n    //     socket.on('sensing', (data) => {\r\n    //         // \"cct:0000/illu:000/cri:000\"\r\n    //         console.log(\"data: \"+data.toString());\r\n    //         // console.log(\"ddd: \"+ data.sensing);\r\n\r\n    //         let str = data.toString();\r\n\r\n    //         let temp = str.split(\"/\");\r\n    //         console.log(\"temp: \"+temp[0]);\r\n    //         let value =[];\r\n    //         for(let i=0;i<temp.length;i++){\r\n                \r\n    //             value[i] = temp[i].split(\":\")[1];\r\n    //             console.log(value[i]);\r\n    //         }\r\n\r\n    //         setCCT(value[0]);\r\n    //         setILLUM(value[1]);\r\n\r\n    //         cri_data[0].value = value[2];\r\n    //         cri_data[1].value = 100 - value[2];\r\n    //         setCRI(cri_data);\r\n\r\n    //     });\r\n\r\n    // },[])\r\n\r\n    // const bntClick =() =>{\r\n    //     // let blank = document.getElementsByClassName(\"blank\")[0];\r\n    //     // blank.remove();\r\n    //     let blind = document.getElementsByClassName(\"blind\")[0];\r\n    //     let background  = document.getElementsByClassName(\"background\")[0];\r\n\r\n    //     blind.style.display = \"none\";\r\n    //     background.style.display = \"inline\";\r\n    // }\r\n\r\n    // const Refresh =() => {\r\n    //     window.location.replace(\"/\");\r\n    // }\r\n\r\n\r\n    // const setCheck =(e) =>{ //led on off Evnet\r\n    //     if(e.target.id === \"on\"){\r\n    //         if(e.target.checked){  //on 일때\r\n    //             control_data[0] = 1;\r\n    //             sent_control_data();\r\n    //         }\r\n    //     }\r\n    //     else{\r\n    //         if(e.target.checked){  //off 일때\r\n    //             control_data[0] = 0;\r\n    //             sent_control_data();\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // const MouseDown =(obj) =>{\r\n    //     let range = obj.target.value;\r\n    //     // console.log(\"mouseDown: \" + range);\r\n    //     window.addEventListener('mouseup', onMouseUp);\r\n\r\n    // }\r\n\r\n    // const onMouseUp =(e) =>{\r\n\r\n    //     if(e.target.id === \"range_cct\" || e.target.id ===\"range_illum\"){\r\n    //         // console.log(\"up: \"+ e.target.value)\r\n    //         let value = e.target.value;\r\n    \r\n    //         if(e.target.id ===\"range_illum\"){\r\n    //             if(value<700){\r\n    //                 e.target.value = 600;\r\n    //             }\r\n    //             else if(value>=700 && value<900){\r\n    //                 e.target.value = 800;\r\n    //             }\r\n    //             else if(value<=1000){\r\n    //                 e.target.value = 1000;\r\n    //             }\r\n\r\n    //             control_data[2] = e.target.value;\r\n    //             setValue(e.target.value);\r\n                \r\n    //         }\r\n    //         else if(e.target.id ===\"range_cct\"){\r\n    //             if(value<4000){\r\n    //                 e.target.value = 3500;\r\n    //             }\r\n    //             else if(value>=4000 && value<5000){\r\n    //                 e.target.value = 4500;\r\n    //             }\r\n    //             else if(value<=5500){\r\n    //                 e.target.value = 5500;\r\n    //             }\r\n\r\n    //             control_data[1] = e.target.value;\r\n                \r\n    //         }\r\n\r\n    //         sent_control_data();\r\n    //     }\r\n\r\n    // }\r\n\r\n\r\n    // const sent_control_data =() =>{\r\n    //     // \"onoff:on/cct:0000/illu:000\"\r\n    //     let led_state;\r\n    //     if(control_data[0]){led_state = \"on\";}\r\n    //     else{led_state=\"off\";}\r\n    //     let str = \"onoff:\"+ led_state+\"/cct:\"+control_data[1]+\"/illu:\"+control_data[2];\r\n\r\n\r\n    //     socket.emit('message', str);//서버에 안드로이드임을 알림\r\n\r\n    //     // console.log(str);\r\n    // }\r\n\r\n    return(\r\n        <div>\r\n            {loading? <Loading/> : <Capstone/>} \r\n\r\n             {/* <div className='blind'>\r\n                <button onClick={bntClick}>loading</button>\r\n            </div> */}\r\n\r\n            {/* <div className='background'>\r\n                <div className='dashboard'>\r\n                    <div className='title'>Dash Board <span onClick={Refresh}>Refresh</span> </div>\r\n                    \r\n                    <div className='dashboard-content'>\r\n                        <div className='cri'>\r\n                            <p>CRI</p>\r\n                            <h4>연색지수</h4>\r\n                            <hr></hr>\r\n                            <div class=\"box\">\r\n                                <Chart data ={data}/>\r\n                            </div>\r\n                        </div>\r\n                        <section>\r\n                            <div className='cct'>\r\n                                <p>CCT</p>\r\n                                <h4>색온도</h4>\r\n                                <hr></hr>\r\n                                <h3>{cct}<span>K</span></h3>\r\n                            </div>\r\n                            <div className='illum'>\r\n                                <p>illumination</p>\r\n                                <h4>조도</h4>\r\n                                <hr></hr>\r\n                                <h3>{illum}<span>LUX</span></h3>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n                <div className='control'>\r\n                    <div className='title'>{value}</div>\r\n                    <div className='control-box'>\r\n                        <section className='light'>\r\n                            <h4>조명</h4>\r\n\r\n                            <div className=\"light-ctl\">\r\n                                <div className=\"radio-checked\">\r\n                                    <div className=\"radio-checked_highlight\"></div>\r\n                                        <div className=\"radio-checked_container\">\r\n                                        <input className=\"radio-checked_input\" id=\"on\" name=\"status\" type=\"radio\" value=\"on\" onClick ={(e) =>{setCheck(e)}}/>\r\n                                        <label className=\"radio-checked_label radio-checked_label--on\" for=\"on\"> On</label>\r\n                                        <input className=\"radio-checked_input\" id=\"off\" name=\"status\" type=\"radio\" value=\"off\" onClick ={(e) =>{setCheck(e)}} />\r\n                                        <label className=\"radio-checked_label radio-checked_label--off\" for=\"off\">Off</label>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n\r\n                        <section className='cct-ctl'>\r\n                            <h4>색온도(K)</h4>\r\n                            \r\n                            <div className=\"range\">\r\n                                <input id=\"range_cct\" type=\"range\"  min=\"3500\" max=\"5500\" step=\"100\" onMouseDown={(e)=>MouseDown(e)}></input>\r\n                                <div className='range__ticks'>\r\n                                    <span className=\"range__tick\"><span className =\"range__tick-text\">3500</span></span>\r\n                                    <span className=\"range__tick\"><span className =\"range__tick-text\">4500</span></span>\r\n                                    <span className=\"range__tick\"><span className =\"range__tick-text\">5500</span></span>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                        <section className='illum-ctl'>\r\n                            <h4>조도(LUX)</h4>\r\n                            \r\n                            <div className=\"range\">\r\n                                <input id=\"range_illum\" type=\"range\" min=\"600\" max=\"1000\" step=\"20\"  onMouseDown={(e)=>MouseDown(e)}></input>\r\n                                <div className='range__ticks'>\r\n                                    <span className=\"range__tick\"><span className =\"range__tick-text\">600</span></span>\r\n                                    <span className=\"range__tick\"><span className =\"range__tick-text\">800</span></span>\r\n                                    <span className=\"range__tick\"><span className =\"range__tick-text\">1000</span></span>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                        \r\n                </div>\r\n            </div> */}\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC/C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,WAAW;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA,IAAMC,GAAG,GAAG,6BAA6B;AACzC,IAAMC,MAAM,GAAIJ,EAAE,CAACK,OAAO,CAACF,GAAG,CAAC;AAE/BG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;AAC7BH,MAAM,CAACI,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;;AAGjC,SAASC,IAAI,GAAE;EAEX;EACA;EACA;EAEA;EAAA,gBAC8BX,QAAQ,CAAC,IAAI,CAAC;IAAA;IAArCY,OAAO;IAAEC,UAAU;EAE1BP,MAAM,CAACQ,EAAE,CAAC,cAAc,EAAE,UAACC,IAAI,EAAI;IAC/BP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;IACjB,IAAGA,IAAI,KAAI,MAAM,EAAC;MACdP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3C;MACA;;MAEA;MACA;MACAI,UAAU,CAAC,KAAK,CAAC;IACrB;EAEJ,CAAC,CAAC;;EAEF;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;;EAEA;;EAGA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;;EAEA,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKD,OAAO,gBAAE,oBAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,gBAAG,oBAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,CAkFhC;AAId;AAEA,eAAeD,IAAI"},"metadata":{},"sourceType":"module"}