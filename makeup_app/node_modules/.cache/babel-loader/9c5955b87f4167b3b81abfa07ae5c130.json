{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\WITLAB\\\\nodejs\\\\makeup\\\\makeup\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nfunction useScript(src) {\n  // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n  var _useState = useState(src ? \"loading\" : \"idle\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  useEffect(function () {\n    // Allow falsy src value if waiting on other data needed for\n    // constructing the script URL passed to this hook.\n    if (!src) {\n      setStatus(\"idle\");\n      return;\n    }\n\n    // Fetch existing script element by src\n    // It may have been added by another intance of this hook\n    var script = document.querySelector(\"script[src=\\\"\".concat(src, \"\\\"]\"));\n    if (!script) {\n      // Create script\n      script = document.createElement(\"script\");\n      script.src = src;\n      script.async = true;\n      script.setAttribute(\"data-status\", \"loading\");\n      // Add script to document body\n      document.body.appendChild(script);\n\n      // Store status in attribute on script\n      // This can be read by other instances of this hook\n      var setAttributeFromEvent = function setAttributeFromEvent(event) {\n        script.setAttribute(\"data-status\", event.type === \"load\" ? \"ready\" : \"error\");\n      };\n      script.addEventListener(\"load\", setAttributeFromEvent);\n      script.addEventListener(\"error\", setAttributeFromEvent);\n    } else {\n      // Grab existing script status from attribute and set to state.\n      setStatus(script.getAttribute(\"data-status\"));\n    }\n\n    // Script event handler to update status in state\n    // Note: Even if the script already exists we still need to add\n    // event handlers to update the state for *this* hook instance.\n    var setStateFromEvent = function setStateFromEvent(event) {\n      setStatus(event.type === \"load\" ? \"ready\" : \"error\");\n    };\n\n    // Add event listeners\n    script.addEventListener(\"load\", setStateFromEvent);\n    script.addEventListener(\"error\", setStateFromEvent);\n\n    // Remove event listeners on cleanup\n    return function () {\n      if (script) {\n        script.removeEventListener(\"load\", setStateFromEvent);\n        script.removeEventListener(\"error\", setStateFromEvent);\n      }\n    };\n  }, [src] // Only re-run effect if script src changes\n  );\n\n  return status;\n}\nexport { useScript };","map":{"version":3,"names":["useState","useEffect","useScript","src","status","setStatus","script","document","querySelector","createElement","async","setAttribute","body","appendChild","setAttributeFromEvent","event","type","addEventListener","getAttribute","setStateFromEvent","removeEventListener"],"sources":["C:/Users/WITLAB/nodejs/makeup/makeup/src/hook.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n\r\nfunction useScript(src) {\r\n    // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\r\n    const [status, setStatus] = useState(src ? \"loading\" : \"idle\");\r\n\r\n    useEffect(\r\n        () => {\r\n            // Allow falsy src value if waiting on other data needed for\r\n            // constructing the script URL passed to this hook.\r\n            if (!src) {\r\n                setStatus(\"idle\");\r\n                return;\r\n            }\r\n\r\n            // Fetch existing script element by src\r\n            // It may have been added by another intance of this hook\r\n            let script = document.querySelector(`script[src=\"${src}\"]`);\r\n\r\n            if (!script) {\r\n                // Create script\r\n                script = document.createElement(\"script\");\r\n                script.src = src;\r\n                script.async = true;\r\n                script.setAttribute(\"data-status\", \"loading\");\r\n                // Add script to document body\r\n                document.body.appendChild(script);\r\n\r\n                // Store status in attribute on script\r\n                // This can be read by other instances of this hook\r\n                const setAttributeFromEvent = (event) => {\r\n                    script.setAttribute(\r\n                        \"data-status\",\r\n                        event.type === \"load\" ? \"ready\" : \"error\"\r\n                    );\r\n                };\r\n\r\n                script.addEventListener(\"load\", setAttributeFromEvent);\r\n                script.addEventListener(\"error\", setAttributeFromEvent);\r\n            } else {\r\n                // Grab existing script status from attribute and set to state.\r\n                setStatus(script.getAttribute(\"data-status\"));\r\n            }\r\n\r\n            // Script event handler to update status in state\r\n            // Note: Even if the script already exists we still need to add\r\n            // event handlers to update the state for *this* hook instance.\r\n            const setStateFromEvent = (event) => {\r\n                setStatus(event.type === \"load\" ? \"ready\" : \"error\");\r\n            };\r\n\r\n            // Add event listeners\r\n            script.addEventListener(\"load\", setStateFromEvent);\r\n            script.addEventListener(\"error\", setStateFromEvent);\r\n\r\n            // Remove event listeners on cleanup\r\n            return () => {\r\n                if (script) {\r\n                    script.removeEventListener(\"load\", setStateFromEvent);\r\n                    script.removeEventListener(\"error\", setStateFromEvent);\r\n                }\r\n            };\r\n        },\r\n        [src] // Only re-run effect if script src changes\r\n    );\r\n\r\n    return status;\r\n}\r\n\r\nexport { useScript };"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAG3C,SAASC,SAAS,CAACC,GAAG,EAAE;EACpB;EAAA,gBAC4BH,QAAQ,CAACG,GAAG,GAAG,SAAS,GAAG,MAAM,CAAC;IAAA;IAAvDC,MAAM;IAAEC,SAAS;EAExBJ,SAAS,CACL,YAAM;IACF;IACA;IACA,IAAI,CAACE,GAAG,EAAE;MACNE,SAAS,CAAC,MAAM,CAAC;MACjB;IACJ;;IAEA;IACA;IACA,IAAIC,MAAM,GAAGC,QAAQ,CAACC,aAAa,wBAAgBL,GAAG,SAAK;IAE3D,IAAI,CAACG,MAAM,EAAE;MACT;MACAA,MAAM,GAAGC,QAAQ,CAACE,aAAa,CAAC,QAAQ,CAAC;MACzCH,MAAM,CAACH,GAAG,GAAGA,GAAG;MAChBG,MAAM,CAACI,KAAK,GAAG,IAAI;MACnBJ,MAAM,CAACK,YAAY,CAAC,aAAa,EAAE,SAAS,CAAC;MAC7C;MACAJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;;MAEjC;MACA;MACA,IAAMQ,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIC,KAAK,EAAK;QACrCT,MAAM,CAACK,YAAY,CACf,aAAa,EACbI,KAAK,CAACC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAC5C;MACL,CAAC;MAEDV,MAAM,CAACW,gBAAgB,CAAC,MAAM,EAAEH,qBAAqB,CAAC;MACtDR,MAAM,CAACW,gBAAgB,CAAC,OAAO,EAAEH,qBAAqB,CAAC;IAC3D,CAAC,MAAM;MACH;MACAT,SAAS,CAACC,MAAM,CAACY,YAAY,CAAC,aAAa,CAAC,CAAC;IACjD;;IAEA;IACA;IACA;IACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIJ,KAAK,EAAK;MACjCV,SAAS,CAACU,KAAK,CAACC,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,OAAO,CAAC;IACxD,CAAC;;IAED;IACAV,MAAM,CAACW,gBAAgB,CAAC,MAAM,EAAEE,iBAAiB,CAAC;IAClDb,MAAM,CAACW,gBAAgB,CAAC,OAAO,EAAEE,iBAAiB,CAAC;;IAEnD;IACA,OAAO,YAAM;MACT,IAAIb,MAAM,EAAE;QACRA,MAAM,CAACc,mBAAmB,CAAC,MAAM,EAAED,iBAAiB,CAAC;QACrDb,MAAM,CAACc,mBAAmB,CAAC,OAAO,EAAED,iBAAiB,CAAC;MAC1D;IACJ,CAAC;EACL,CAAC,EACD,CAAChB,GAAG,CAAC,CAAC;EAAA,CACT;;EAED,OAAOC,MAAM;AACjB;AAEA,SAASF,SAAS"},"metadata":{},"sourceType":"module"}